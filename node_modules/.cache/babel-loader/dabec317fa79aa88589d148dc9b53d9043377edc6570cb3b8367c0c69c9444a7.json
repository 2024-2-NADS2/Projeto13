{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\buldo\\\\OneDrive\\\\Documentos\\\\GitHub\\\\Projeto13\\\\src\\\\VideoList.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport Video from './Video';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst API_KEY = 'AIzaSyDUX5L9Ngl44p0n7UdPUSdldQkK0AaWHfg';\nexport default function VideoList() {\n  _s();\n  const [videos, setVideos] = useState([]);\n  const [query, setQuery] = useState('');\n\n  // Função para buscar vídeos da API\n  const searchVideos = async query => {\n    try {\n      const response = await fetch(`https://www.googleapis.com/youtube/v3/search?part=snippet&maxResults=5&q=${encodeURIComponent(query)}&key=${AIzaSyDUX5L9Ngl44p0n7UdPUSdldQkK0AaWHfg}`);\n      const data = await response.json();\n      setVideos(data.items || []);\n    } catch (error) {\n      console.error('Erro ao buscar vídeos:', error);\n    }\n  };\n\n  // Função chamada quando o usuário clica no botão de busca\n  const handleSearch = event => {\n    event.preventDefault();\n    if (query) {\n      searchVideos(query);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Buscar V\\xEDdeos no YouTube\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleSearch,\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        value: query,\n        onChange: e => setQuery(e.target.value),\n        placeholder: \"Digite sua pesquisa\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        children: \"Buscar\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"video-list\",\n      children: videos.map(video => /*#__PURE__*/_jsxDEV(Video, {\n        titulo: video.snippet.title,\n        canal: video.snippet.channelTitle,\n        thumbnail: video.snippet.thumbnails.medium.url\n      }, video.id.videoId, false, {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 21\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 32,\n    columnNumber: 9\n  }, this);\n}\n_s(VideoList, \"8L6Q8ZaFCRT6lxljIzcY7HEUNSw=\");\n_c = VideoList;\nvar _c;\n$RefreshReg$(_c, \"VideoList\");","map":{"version":3,"names":["React","useState","useEffect","Video","jsxDEV","_jsxDEV","API_KEY","VideoList","_s","videos","setVideos","query","setQuery","searchVideos","response","fetch","encodeURIComponent","AIzaSyDUX5L9Ngl44p0n7UdPUSdldQkK0AaWHfg","data","json","items","error","console","handleSearch","event","preventDefault","children","fileName","_jsxFileName","lineNumber","columnNumber","onSubmit","type","value","onChange","e","target","placeholder","className","map","video","titulo","snippet","title","canal","channelTitle","thumbnail","thumbnails","medium","url","id","videoId","_c","$RefreshReg$"],"sources":["C:/Users/buldo/OneDrive/Documentos/GitHub/Projeto13/src/VideoList.jsx"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport Video from './Video';\r\n\r\nconst API_KEY = 'AIzaSyDUX5L9Ngl44p0n7UdPUSdldQkK0AaWHfg';\r\n\r\nexport default function VideoList() {\r\n    const [videos, setVideos] = useState([]);\r\n    const [query, setQuery] = useState('');\r\n\r\n    // Função para buscar vídeos da API\r\n    const searchVideos = async (query) => {\r\n        try {\r\n            const response = await fetch(\r\n                `https://www.googleapis.com/youtube/v3/search?part=snippet&maxResults=5&q=${encodeURIComponent(query)}&key=${AIzaSyDUX5L9Ngl44p0n7UdPUSdldQkK0AaWHfg}`\r\n            );\r\n            const data = await response.json();\r\n            setVideos(data.items || []);\r\n        } catch (error) {\r\n            console.error('Erro ao buscar vídeos:', error);\r\n        }\r\n    };\r\n\r\n    // Função chamada quando o usuário clica no botão de busca\r\n    const handleSearch = (event) => {\r\n        event.preventDefault();\r\n        if (query) {\r\n            searchVideos(query);\r\n        }\r\n    };\r\n\r\n    return (\r\n        <div>\r\n            <h1>Buscar Vídeos no YouTube</h1>\r\n            <form onSubmit={handleSearch}>\r\n                <input\r\n                    type=\"text\"\r\n                    value={query}\r\n                    onChange={(e) => setQuery(e.target.value)}\r\n                    placeholder=\"Digite sua pesquisa\"\r\n                />\r\n                <button type=\"submit\">Buscar</button>\r\n            </form>\r\n            \r\n            <div className=\"video-list\">\r\n                {videos.map((video) => (\r\n                    <Video\r\n                        key={video.id.videoId}\r\n                        titulo={video.snippet.title}\r\n                        canal={video.snippet.channelTitle}\r\n                        thumbnail={video.snippet.thumbnails.medium.url}\r\n                    />\r\n                ))}\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAClD,OAAOC,KAAK,MAAM,SAAS;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE5B,MAAMC,OAAO,GAAG,yCAAyC;AAEzD,eAAe,SAASC,SAASA,CAAA,EAAG;EAAAC,EAAA;EAChC,MAAM,CAACC,MAAM,EAAEC,SAAS,CAAC,GAAGT,QAAQ,CAAC,EAAE,CAAC;EACxC,MAAM,CAACU,KAAK,EAAEC,QAAQ,CAAC,GAAGX,QAAQ,CAAC,EAAE,CAAC;;EAEtC;EACA,MAAMY,YAAY,GAAG,MAAOF,KAAK,IAAK;IAClC,IAAI;MACA,MAAMG,QAAQ,GAAG,MAAMC,KAAK,CACxB,4EAA4EC,kBAAkB,CAACL,KAAK,CAAC,QAAQM,uCAAuC,EACxJ,CAAC;MACD,MAAMC,IAAI,GAAG,MAAMJ,QAAQ,CAACK,IAAI,CAAC,CAAC;MAClCT,SAAS,CAACQ,IAAI,CAACE,KAAK,IAAI,EAAE,CAAC;IAC/B,CAAC,CAAC,OAAOC,KAAK,EAAE;MACZC,OAAO,CAACD,KAAK,CAAC,wBAAwB,EAAEA,KAAK,CAAC;IAClD;EACJ,CAAC;;EAED;EACA,MAAME,YAAY,GAAIC,KAAK,IAAK;IAC5BA,KAAK,CAACC,cAAc,CAAC,CAAC;IACtB,IAAId,KAAK,EAAE;MACPE,YAAY,CAACF,KAAK,CAAC;IACvB;EACJ,CAAC;EAED,oBACIN,OAAA;IAAAqB,QAAA,gBACIrB,OAAA;MAAAqB,QAAA,EAAI;IAAwB;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eACjCzB,OAAA;MAAM0B,QAAQ,EAAER,YAAa;MAAAG,QAAA,gBACzBrB,OAAA;QACI2B,IAAI,EAAC,MAAM;QACXC,KAAK,EAAEtB,KAAM;QACbuB,QAAQ,EAAGC,CAAC,IAAKvB,QAAQ,CAACuB,CAAC,CAACC,MAAM,CAACH,KAAK,CAAE;QAC1CI,WAAW,EAAC;MAAqB;QAAAV,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACpC,CAAC,eACFzB,OAAA;QAAQ2B,IAAI,EAAC,QAAQ;QAAAN,QAAA,EAAC;MAAM;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAQ,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACnC,CAAC,eAEPzB,OAAA;MAAKiC,SAAS,EAAC,YAAY;MAAAZ,QAAA,EACtBjB,MAAM,CAAC8B,GAAG,CAAEC,KAAK,iBACdnC,OAAA,CAACF,KAAK;QAEFsC,MAAM,EAAED,KAAK,CAACE,OAAO,CAACC,KAAM;QAC5BC,KAAK,EAAEJ,KAAK,CAACE,OAAO,CAACG,YAAa;QAClCC,SAAS,EAAEN,KAAK,CAACE,OAAO,CAACK,UAAU,CAACC,MAAM,CAACC;MAAI,GAH1CT,KAAK,CAACU,EAAE,CAACC,OAAO;QAAAxB,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAIxB,CACJ;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACD,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACL,CAAC;AAEd;AAACtB,EAAA,CAlDuBD,SAAS;AAAA6C,EAAA,GAAT7C,SAAS;AAAA,IAAA6C,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}