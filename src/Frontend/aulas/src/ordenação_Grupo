using System;

namespace EducacaoDeQualidade
{
    public class Curso
    {
        private string nome;

        public string Nome
        {
            get { return nome; }
            set { nome = value; }
        }

        public Curso(string nome)
        {
            this.nome = nome;
        }
    }

    class Program
    {
        static void Main(string[] args)
        {
            Curso[] cursos = gerarListaRandom(10);
            Console.WriteLine("Cursos gerados:");
            imprimirLista(cursos);

            Console.WriteLine("Ordenando por BubbleSort...");
            Console.WriteLine(DateTime.Now);
            bubbleSort(cursos);
            Console.WriteLine(DateTime.Now);
            Console.WriteLine("FIM BubbleSort");
            imprimirLista(cursos);

            Curso[] cursos2 = gerarListaRandom(10);
            Console.WriteLine("Cursos gerados:");
            imprimirLista(cursos2);

            Console.WriteLine("Ordenando por QuickSort...");
            Console.WriteLine(DateTime.Now);
            QuickSort(cursos2, 0, cursos2.Length - 1);
            Console.WriteLine(DateTime.Now);
            Console.WriteLine("FIM QuickSort");
            imprimirLista(cursos2);
        }

        static Curso[] gerarListaRandom(int N)
        {
            string[] nomes = { "Matemática", "História", "Ciências", "Programação", "Física", "Química", "Biologia", "Geografia", "Arte", "Educação Física" };
            Random rnd = new Random();
            Curso[] lista = new Curso[N];

            for (int i = 0; i < N; i++)
            {
                lista[i] = new Curso(nomes[rnd.Next(nomes.Length)]);
            }

            return lista;
        }

        static void imprimirLista(Curso[] lista)
        {
            foreach (var curso in lista) // Correção aqui
            {
                Console.Write(curso.Nome + "|");
            }
            Console.WriteLine();
        }

        static void bubbleSort(Curso[] lista)
        {
            int N = lista.Length;
            Curso aux;
            for (int i = N - 1; i > 0; i--)
            {
                for (int j = 0; j < i; j++)
                {
                    if (string.Compare(lista[j].Nome, lista[j + 1].Nome) > 0)
                    {
                        aux = lista[j];
                        lista[j] = lista[j + 1];
                        lista[j + 1] = aux;
                    }
                }
            }
        }

        static void QuickSort(Curso[] lista, int esq, int dir)
        {
            int pivot;
            if (esq < dir)
            {
                pivot = Particao(lista, esq, dir);
                if (pivot > 1)
                {
                    QuickSort(lista, esq, pivot - 1);
                }

                if (pivot + 1 < dir)
                {
                    QuickSort(lista, pivot + 1, dir);
                }
            }
        }

        static int Particao(Curso[] lista, int esq, int dir)
        {
            string elementoPivot = lista[dir].Nome;
            bool acabou = false;

            while (!acabou)
            {
                while (string.Compare(lista[esq].Nome, elementoPivot) < 0)
                {
                    esq++;
                }
                while (string.Compare(lista[dir].Nome, elementoPivot) > 0)
                {
                    dir--;
                }
                if (esq < dir)
                {
                    if (lista[dir].Nome == lista[esq].Nome)
                    {
                        acabou = true;
                    }
                    else
                    {
                        Curso aux = lista[esq];
                        lista[esq] = lista[dir];
                        lista[dir] = aux;
                    }
                }
                else
                {
                    acabou = true;
                }
            }
            return dir;
        }
    }
}
